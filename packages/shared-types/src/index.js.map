{"version":3,"file":"index.js","sourceRoot":"","sources":["index.ts"],"names":[],"mappings":"","sourcesContent":["// Base shape interface\nexport interface BaseShape {\n  id: string;\n  type: 'rectangle' | 'ellipse' | 'line' | 'text' | 'freedraw';\n  x: number; // World coordinates\n  y: number; // World coordinates\n  rotation: number; // Radians\n  opacity: number;\n  strokeColor: string;\n  fillColor: string;\n  strokeWidth: number;\n}\n\n// Rectangle shape\nexport interface RectangleShape extends BaseShape {\n  type: 'rectangle';\n  width: number;\n  height: number;\n}\n\n// Ellipse shape\nexport interface EllipseShape extends BaseShape {\n  type: 'ellipse';\n  width: number;\n  height: number;\n}\n\n// Line shape\nexport interface LineShape extends BaseShape {\n  type: 'line';\n  x2: number;\n  y2: number;\n}\n\n// Text shape\nexport interface TextShape extends BaseShape {\n  type: 'text';\n  text: string;\n  fontSize: number;\n  fontFamily: string;\n}\n\n// Freedraw shape\nexport interface FreedrawShape extends BaseShape {\n  type: 'freedraw';\n  points: Array<{ x: number; y: number }>;\n}\n\n// Union type for all shapes\nexport type Shape = RectangleShape | EllipseShape | LineShape | TextShape | FreedrawShape;\n\n// Camera/Viewport state\nexport interface Camera {\n  x: number;\n  y: number;\n  zoom: number;\n}\n\n// Point interface\nexport interface Point {\n  x: number;\n  y: number;\n}\n\n// Whiteboard state\nexport interface WhiteboardState {\n  shapes: Record<string, Shape>;\n  selectedShapeIds: Set<string>;\n  camera: Camera;\n  currentTool: string;\n}"]}